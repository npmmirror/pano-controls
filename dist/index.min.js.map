{"version":3,"file":"index.min.js","sources":["webpack://PanoControls/webpack/universalModuleDefinition","webpack://PanoControls/webpack/bootstrap","webpack://PanoControls/external {\"commonjs\":\"three\",\"commonjs2\":\"three\",\"amd\":\"three\",\"root\":\"THREE\"}","webpack://PanoControls/./src/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"three\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"three\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"PanoControls\"] = factory(require(\"three\"));\n\telse\n\t\troot[\"PanoControls\"] = factory(root[\"THREE\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","/* eslint-disable no-bitwise */\r\n/* eslint-disable @typescript-eslint/ban-ts-ignore */\r\n\r\nimport * as THREE from \"three\"\r\n\r\nconsole.log(`PanoControls ${process.env.DEFINED_VERSION}`)\r\n\r\nconst EPS = 0.000001\r\n\r\nconst { PI } = Math\r\n\r\n/**\r\n * 可对小数进行“取模”的方法\r\n * @returns 返回(a / b)的余数\r\n */\r\nconst decableMod = (a: number, b: number): number => {\r\n  const n = Math.floor(a / b)\r\n  return a - (n * b)\r\n}\r\n\r\nconst clamp = (val: number, min: number, max: number): number => {\r\n  if (val < min) {\r\n    return min\r\n  }\r\n  if (val > max) {\r\n    return max\r\n  }\r\n  return val\r\n}\r\n\r\nconst loopedNumber = (val: number, min: number, max: number): number => {\r\n  if (val < min) {\r\n    // return val + max - min\r\n    // max - (min - val) % (max - min)\r\n    return max - decableMod(min - val, max - min)\r\n  }\r\n  if (val > max) {\r\n    // return val + min - max\r\n    // min + (val - max) % (max - min)\r\n    return min + decableMod(val - max, max - min)\r\n  }\r\n  return val\r\n}\r\n\r\nclass PanoControls extends THREE.EventDispatcher {\r\n    public enabled = true\r\n\r\n    public enableLooped = true\r\n\r\n    public enableRotate = true\r\n\r\n    public enableRotateDamping = true\r\n\r\n    public enableScale = true\r\n\r\n    public enableScaleDamping = true\r\n\r\n    /**\r\n     * 手指滑过一个[this.domSizeVectors.x]时，h(或v)的变化量\r\n     */\r\n    public rotateSpeed = 120\r\n\r\n    /**\r\n     * 手指扩张一个[this.domSizeVectors.x]时，fov的变化量\r\n     */\r\n    public scaleSpeed = -100\r\n\r\n    /**\r\n     * 每个代码执行周期内 自动旋转的角度\r\n     * 该值乘以fps(一般为60)即为每秒旋转的角度\r\n     */\r\n    public autoRotateSpeed = -0.05\r\n\r\n    /**\r\n     * 启动自动旋转的时间间隔\r\n     */\r\n    public autoRotateInterval = 15000\r\n\r\n    /**\r\n     * h/v发生设置行为(不论是否变动)时触发\r\n     */\r\n    public readonly ROTATE_EVENT = {\r\n      type: \"rotate\",\r\n    }\r\n\r\n    /**\r\n     * fov发生设置行为(不论是否变动)时触发\r\n     */\r\n    public readonly SCALE_EVENT = {\r\n      type: \"scale\",\r\n    }\r\n\r\n    /**\r\n     * updateCamera时触发\r\n     */\r\n    public readonly CHANGE_EVENT = {\r\n      type: \"change\",\r\n    }\r\n\r\n    /**\r\n     * 用户交互时触发\r\n     */\r\n    public readonly INTERACT_EVENT = {\r\n      type: \"interact\",\r\n    }\r\n\r\n    public camera: THREE.PerspectiveCamera;\r\n\r\n    public domElement: HTMLElement;\r\n\r\n    /**\r\n     * 一个尺寸的量，触摸旋转时以此为基准\r\n     * 该值越大，则旋转同样角度，手指需要滑动的距离越大\r\n     */\r\n    public domSizeVectors = new THREE.Vector2()\r\n\r\n    private _STATES = {\r\n      NONE: 0,\r\n      ROTATE: 1,\r\n      SCALE: 1 << 1,\r\n    }\r\n\r\n    private _state = this._STATES.NONE\r\n\r\n    private _minFov = 40\r\n\r\n    private _maxFov = 140\r\n\r\n    private _minV = EPS\r\n\r\n    private _maxV = 180 - EPS\r\n\r\n    private _minH = -180\r\n\r\n    private _maxH = 180\r\n\r\n    private _rotateSmoothFactor = 0.9\r\n\r\n    private _scaleSmoothFactor = 0.9\r\n\r\n    private _enableAutoRotate = false\r\n\r\n    private _autoRotateStart = new Date().getTime()\r\n\r\n    private target = new THREE.Vector3()\r\n\r\n    private spherical = new THREE.Spherical()\r\n\r\n    private touchScaleStart = 0\r\n\r\n    private scaleDelta = 0\r\n\r\n    private touchScaleEnd = 0\r\n\r\n    private rotateStart = new THREE.Vector2()\r\n\r\n    private rotateDelta = new THREE.Vector2()\r\n\r\n    private rotateEnd = new THREE.Vector2()\r\n\r\n    private setCursor = (cursorStr: string) => {\r\n      this.domElement.style.cursor = cursorStr\r\n    }\r\n\r\n    /**\r\n     * resize的时候重置domSizeVectors\r\n     */\r\n    onResize: () => void = () => {\r\n      const { clientWidth, clientHeight } = this.domElement\r\n\r\n      const greatVal = clientWidth > clientHeight\r\n        ? clientWidth\r\n        : clientHeight\r\n\r\n      this.domSizeVectors.set(greatVal, greatVal)\r\n    }\r\n\r\n    onTouchStart: (e: TouchEvent) => void = (e) => {\r\n      // touchstart可以阻止浏览器默认右滑行为\r\n      e.preventDefault()\r\n      const { touches } = e\r\n      switch (touches.length) {\r\n      case 1:\r\n        this.onRotateStart(touches[0], true)\r\n        break\r\n      case 2:\r\n        this.onTouchScaleStart(touches)\r\n        break\r\n      default:\r\n        break\r\n      }\r\n    }\r\n\r\n    onTouchMove: (e: TouchEvent) => void = (e) => {\r\n      e.preventDefault()\r\n      const { touches } = e\r\n      switch (touches.length) {\r\n      case 1:\r\n        this.onRotate(touches[0])\r\n        break\r\n      case 2:\r\n        this.onTouchScale(touches)\r\n        break\r\n      default:\r\n        break\r\n      }\r\n    }\r\n\r\n    onTouchEnd: (e: TouchEvent) => void = (e) => {\r\n      e.preventDefault()\r\n      const totalTouchesLength = e.touches.length + e.changedTouches.length\r\n      switch (totalTouchesLength) {\r\n      case 1:\r\n        this.onRotateEnd(e, true)\r\n        break\r\n      case 2:\r\n        this.onTouchScaleEnd()\r\n        break\r\n      default:\r\n        break\r\n      }\r\n    }\r\n\r\n    onMouseDown: (e: MouseEvent) => void = (e) => {\r\n      this.setCursor(\"grabbing\")\r\n      e.preventDefault()\r\n      this.onRotateStart(e)\r\n    }\r\n\r\n    onMouseMove: (e: MouseEvent) => void = (e) => {\r\n      e.preventDefault()\r\n      this.onRotate(e)\r\n    }\r\n\r\n    onMouseUp: (e: MouseEvent) => void = (e) => {\r\n      this.setCursor(\"grab\")\r\n      e.preventDefault()\r\n      this.onRotateEnd(e)\r\n    }\r\n\r\n    onWheel: (e: WheelEvent) => void = (e) => {\r\n      e.preventDefault()\r\n      this.onMouseScale(e.deltaY)\r\n    }\r\n\r\n    constructor(camera: THREE.PerspectiveCamera, domElement: HTMLElement) {\r\n      super()\r\n      this.camera = camera\r\n      this.domElement = domElement\r\n\r\n      this.setCursor(\"grab\")\r\n\r\n      const v = camera.getWorldDirection(new THREE.Vector3())\r\n      this.spherical.setFromVector3(v)\r\n      this.target.copy(camera.position).add(v)\r\n\r\n      this.onResize()\r\n\r\n      this.addEvents()\r\n    }\r\n\r\n    resetAutoRotateTimer() {\r\n      this._autoRotateStart = new Date().getTime()\r\n    }\r\n\r\n    onRotateStart({ clientX, clientY }: MouseEvent | Touch, isTouch = false) {\r\n      this._state |= this._STATES.ROTATE\r\n      this.rotateStart.set(clientX, clientY)\r\n      this.rotateEnd.set(clientX, clientY)\r\n      if (isTouch) {\r\n        document.addEventListener(\"touchmove\", this.onTouchMove)\r\n        document.addEventListener(\"touchend\", this.onTouchEnd)\r\n      } else {\r\n        document.addEventListener(\"mousemove\", this.onMouseMove)\r\n        document.addEventListener(\"mouseup\", this.onMouseUp)\r\n      }\r\n    }\r\n\r\n    onRotate({ clientX, clientY }: MouseEvent | Touch) {\r\n      this.rotateEnd.set(clientX, clientY)\r\n      this.update()\r\n      this.rotateStart.set(clientX, clientY)\r\n      this.dispatchEvent(this.INTERACT_EVENT)\r\n      if (this.enableAutoRotate) {\r\n        this.resetAutoRotateTimer()\r\n      }\r\n    }\r\n\r\n    onRotateEnd(e: MouseEvent | TouchEvent, isTouch = false) {\r\n      this._state &= ~this._STATES.ROTATE\r\n      if (isTouch) {\r\n        document.removeEventListener(\"touchmove\", this.onTouchMove)\r\n        document.removeEventListener(\"touchend\", this.onTouchEnd)\r\n      } else {\r\n        document.removeEventListener(\"mousemove\", this.onMouseMove)\r\n        document.removeEventListener(\"mouseup\", this.onMouseUp)\r\n      }\r\n    }\r\n\r\n    onTouchScaleStart(touches: TouchList) {\r\n      this._state |= this._STATES.SCALE\r\n      const { clientX: x1, clientY: y1 } = touches[0]\r\n      const { clientX: x2, clientY: y2 } = touches[1]\r\n      this.touchScaleStart = new THREE.Vector2(x1, y1).distanceTo(new THREE.Vector2(x2, y2)) / this.domSizeVectors.x\r\n      this.touchScaleEnd = this.touchScaleStart\r\n      document.addEventListener(\"touchmove\", this.onTouchMove)\r\n      document.addEventListener(\"touchend\", this.onTouchEnd)\r\n    }\r\n\r\n    onTouchScale(touches: TouchList) {\r\n      const { clientX: x1, clientY: y1 } = touches[0]\r\n      const { clientX: x2, clientY: y2 } = touches[1]\r\n      this.touchScaleEnd = new THREE.Vector2(x1, y1).distanceTo(new THREE.Vector2(x2, y2)) / this.domSizeVectors.x\r\n      this.update()\r\n      this.touchScaleStart = this.touchScaleEnd\r\n      this.dispatchEvent(this.INTERACT_EVENT)\r\n      if (this.enableAutoRotate) {\r\n        this.resetAutoRotateTimer()\r\n      }\r\n    }\r\n\r\n    onTouchScaleEnd() {\r\n      this._state &= ~this._STATES.SCALE\r\n      this.touchScaleStart = 0\r\n      this.touchScaleEnd = 0\r\n      document.removeEventListener(\"touchmove\", this.onTouchMove)\r\n      document.removeEventListener(\"touchend\", this.onTouchEnd)\r\n    }\r\n\r\n    onMouseScale(deltaY: number) {\r\n      if (Math.abs(deltaY) < 10) {\r\n        /**\r\n         * 懒得写各种兼容了，发现浏览器实现得千奇百怪，往后滚动滚轮一格，deltaY值有以下实现：\r\n         * 以下浏览器均为win10下的64位浏览器：\r\n         * chrome 72.0.3626.121: 100\r\n         * Firefox Quantum 66.0.2: 3\r\n         * ie 11.503.17763.0 最令人发指，会随着页面高度动态改变，从50变到200+...\r\n         */\r\n        // eslint-disable-next-line no-param-reassign\r\n        deltaY *= 40\r\n      }\r\n      this._state |= this._STATES.SCALE\r\n      this.touchScaleStart = 0\r\n      /**\r\n       * WARNING!!!\r\n       * 这里除以7000，是经验值，表示鼠标滚轮和触摸屏之间的协调参数\r\n       */\r\n      this.touchScaleEnd = -deltaY / 7000\r\n      this.update()\r\n      this._state &= ~this._STATES.SCALE\r\n      this.dispatchEvent(this.INTERACT_EVENT)\r\n      if (this.enableAutoRotate) {\r\n        this.resetAutoRotateTimer()\r\n      }\r\n    }\r\n\r\n    addEvents() {\r\n      this.domElement.addEventListener(\"mousedown\", this.onMouseDown)\r\n      this.domElement.addEventListener(\"touchstart\", this.onTouchStart)\r\n      this.domElement.addEventListener(\"wheel\", this.onWheel)\r\n      window.addEventListener(\"resize\", this.onResize)\r\n    }\r\n\r\n    removeEvents() {\r\n      this.domElement.removeEventListener(\"mousedown\", this.onMouseDown)\r\n      this.domElement.removeEventListener(\"touchstart\", this.onTouchStart)\r\n      this.domElement.removeEventListener(\"wheel\", this.onWheel)\r\n      window.removeEventListener(\"resize\", this.onResize)\r\n\r\n      document.removeEventListener(\"touchmove\", this.onTouchMove)\r\n      document.removeEventListener(\"touchend\", this.onTouchEnd)\r\n      document.removeEventListener(\"mousemove\", this.onMouseMove)\r\n      document.removeEventListener(\"mouseup\", this.onMouseUp)\r\n    }\r\n\r\n    update() {\r\n      if (!this.enabled) {\r\n        return\r\n      }\r\n      const rotateNeedUpdate = this.enableRotate && this.updateRotateDelta()\r\n      const scaleNeedUpdate = this.enableScale && this.updateScaleDelta()\r\n\r\n      if (rotateNeedUpdate || scaleNeedUpdate) {\r\n        this.updateCamera()\r\n      }\r\n    }\r\n\r\n    updateCamera() {\r\n      const { target, spherical, camera } = this\r\n\r\n      this.dispatchEvent(this.CHANGE_EVENT)\r\n      target.setFromSpherical(spherical).add(camera.position)\r\n      camera.lookAt(target)\r\n      camera.updateProjectionMatrix()\r\n    }\r\n\r\n    updateRotateDelta() {\r\n      let needsUpdate = false\r\n\r\n      if (this._state & this._STATES.ROTATE) {\r\n        this.rotateDelta\r\n          .subVectors(this.rotateEnd, this.rotateStart)\r\n          .divide(this.domSizeVectors)\r\n          .multiplyScalar(this.rotateSpeed)\r\n        needsUpdate = true\r\n      } else if (this.enableRotateDamping && this.rotateDelta.lengthSq() > EPS) {\r\n        this.rotateDelta.multiplyScalar(this.rotateSmoothFactor)\r\n        needsUpdate = true\r\n      } else {\r\n        this.rotateDelta.set(0, 0)\r\n      }\r\n\r\n      const delta = new Date().getTime() - this._autoRotateStart\r\n      if (this.enableAutoRotate && (delta > this.autoRotateInterval)) {\r\n        this._state |= this._STATES.ROTATE\r\n        this.rotateDelta.x += this.autoRotateSpeed\r\n        needsUpdate = true\r\n      }\r\n\r\n      if (needsUpdate) {\r\n        this.h += this.rotateDelta.x\r\n        this.v -= this.rotateDelta.y\r\n      }\r\n\r\n      return needsUpdate\r\n    }\r\n\r\n    updateScaleDelta() {\r\n      let needsUpdate = false\r\n      if (this._state & this._STATES.SCALE) {\r\n        this.scaleDelta = (this.touchScaleEnd - this.touchScaleStart) * this.scaleSpeed\r\n        this.fov += this.scaleDelta\r\n        needsUpdate = true\r\n      } else if (this.enableScaleDamping && Math.abs(this.scaleDelta) > EPS) {\r\n        this.scaleDelta *= this.scaleSmoothFactor\r\n        this.fov += this.scaleDelta\r\n        needsUpdate = true\r\n      } else {\r\n        this.scaleDelta = 0\r\n      }\r\n      return needsUpdate\r\n    }\r\n\r\n    get enableAutoRotate() {\r\n      return this._enableAutoRotate\r\n    }\r\n\r\n    set enableAutoRotate(val: boolean) {\r\n      this._enableAutoRotate = val\r\n      if (val) {\r\n        this.resetAutoRotateTimer()\r\n      }\r\n    }\r\n\r\n    /**\r\n     * 旋转衰减因子，between 0 and 1\r\n     */\r\n    get rotateSmoothFactor() {\r\n      return this._rotateSmoothFactor\r\n    }\r\n\r\n    set rotateSmoothFactor(val: number) {\r\n      if (val <= 0 || val >= 1) {\r\n        console.error(\"PanoControls.rotateSmoothFactor must be a value between 0 and 1.\")\r\n      }\r\n      this._rotateSmoothFactor = clamp(val, EPS, 1 - EPS)\r\n    }\r\n\r\n    /**\r\n     * 缩放衰减因子，between 0 and 1\r\n     */\r\n    set scaleSmoothFactor(val: number) {\r\n      if (val <= 0 || val >= 1) {\r\n        console.error(\"PanoControls.scaleSmoothFactor must be a value between 0 and 1.\")\r\n      }\r\n      this._scaleSmoothFactor = clamp(val, EPS, 1 - EPS)\r\n    }\r\n\r\n    get scaleSmoothFactor() {\r\n      return this._scaleSmoothFactor\r\n    }\r\n\r\n    get h() {\r\n      return (this.spherical.theta * 180) / PI\r\n    }\r\n\r\n    set h(val: number) {\r\n      const realVal = this.enableLooped\r\n        ? loopedNumber(val, this.minH, this.maxH)\r\n        : clamp(val, this.minH, this.maxH)\r\n      this.spherical.theta = (realVal / 180) * PI\r\n      this.dispatchEvent(this.ROTATE_EVENT)\r\n    }\r\n\r\n    get v() {\r\n      return (this.spherical.phi * 180) / PI\r\n    }\r\n\r\n    set v(val: number) {\r\n      const realVal = clamp(val, this.minV, this.maxV)\r\n      this.spherical.phi = (realVal / 180) * PI\r\n      this.dispatchEvent(this.ROTATE_EVENT)\r\n    }\r\n\r\n    get fov() {\r\n      return this.camera.fov\r\n    }\r\n\r\n    set fov(val: number) {\r\n      this.camera.fov = clamp(val, this.minFov, this.maxFov)\r\n      this.dispatchEvent(this.SCALE_EVENT)\r\n    }\r\n\r\n    get minFov() {\r\n      return this._minFov\r\n    }\r\n\r\n    set minFov(val: number) {\r\n      this._minFov = clamp(val, EPS, this.maxFov)\r\n    }\r\n\r\n    get maxFov() {\r\n      return this._maxFov\r\n    }\r\n\r\n    set maxFov(val: number) {\r\n      this._maxFov = clamp(val, this.minFov, 180 - EPS)\r\n    }\r\n\r\n    get minV() {\r\n      return this._minV\r\n    }\r\n\r\n    set minV(val: number) {\r\n      this._minV = clamp(val, EPS, this.maxV)\r\n    }\r\n\r\n    get maxV() {\r\n      return this._maxV\r\n    }\r\n\r\n    set maxV(val: number) {\r\n      this._maxV = clamp(val, this.minV, 180 - EPS)\r\n    }\r\n\r\n    get minH() {\r\n      return this._minH\r\n    }\r\n\r\n    set minH(val: number) {\r\n      this._minH = clamp(val, -180, this.maxH)\r\n    }\r\n\r\n    get maxH() {\r\n      return this._maxH\r\n    }\r\n\r\n    set maxH(val: number) {\r\n      this._maxH = clamp(val, this.minH, 180)\r\n    }\r\n}\r\n\r\nexport default PanoControls\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AClFA;;;;;;;ACAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;AAEA;AAEA;AAEA;AAEA;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAyMA;AAAA;AAxMA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;;AAEA;AACA;AAEA;;AAEA;AACA;AAEA;;;AAGA;AACA;AAEA;;AAEA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AAMA;;;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAIA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAPA;AAYA;AAHA;;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAPA;AAYA;AAOA;AACA;AACA;AAZA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAAA;AAMA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AARA;AAUA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AANA;AAQA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AALA;AAOA;AAAA;AACA;AACA;AAEA;AACA;AACA;;;AAJA;AAMA;AAAA;AACA;AACA;AAEA;AACA;AACA;;;AAJA;AAMA;AAAA;AACA;AACA;AAEA;AACA;AACA;;;AAJA;AAMA;AAAA;AACA;AACA;AAEA;AACA;AACA;;;AAJA;AAMA;AAAA;AACA;AACA;AAEA;AACA;AACA;;;AAJA;AAMA;AAAA;AACA;AACA;AAEA;AACA;AACA;;;AAJA;AAKA;AAAA;AAEA;;;;;A","sourceRoot":""}